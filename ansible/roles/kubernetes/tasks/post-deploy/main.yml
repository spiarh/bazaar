---
- name: apply_baseline_template_manifests
  shell: "echo '{{ lookup('template', item) }}' | kubectl apply -f -"
  delegate_to: localhost
  run_once: true
  with_items:
    - kubernetes-services-endpoint.yml

- name: check_podcidr
  command: "kubectl get nodes {{ ansible_nodename }} -ojsonpath='{.spec.podCIDR}'"
  delegate_to: localhost
  changed_when: false
  register: node_podcidr

- name: add_podcdir
  command: "kubectl patch node {{ ansible_nodename }} -p '{\"spec\":{\"podCIDR\":\"{{ pod_cidr }}\"}}'"
  delegate_to: localhost
  when:
    - kubernetes.controller_manager.allocate_node_cidrs == "false"
    - pod_cidr not in node_podcidr.stdout

- name: check_noschedule_taint
  command: "kubectl get nodes {{ ansible_nodename }} -ojsonpath='{.spec.taints}'"
  delegate_to: localhost
  changed_when: false
  register: node_taints

- name: add_noschedule_taint
  command: "kubectl taint node {{ ansible_nodename }} node-role.kubernetes.io/control-plane=:NoSchedule"
  delegate_to: localhost
  when:
    - kubernetes.taints.master.noschedule
    - '"NoSchedule" not in node_taints.stdout'
    - inventory_hostname in groups['masters']

- name: remove_noschedule_taint
  command: "kubectl taint node {{ ansible_nodename }} node-role.kubernetes.io/control-plane=:NoSchedule-"
  delegate_to: localhost
  when:
    - kubernetes.taints.master.noschedule == false
    - '"NoSchedule" in node_taints.stdout'
    - inventory_hostname in groups['masters']
